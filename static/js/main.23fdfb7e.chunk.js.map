{"version":3,"sources":["Components/NavBar/NavBar.js","constants/constants.js","axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","urls/urls.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","apiKey","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","Response","data","results","Math","floor","random","length","style","backgroundImage","backdrop_path","title","overview","RowPost","props","orginals","setOrginals","url","urlId","setUrlId","display","setDisplay","map","obj","onClick","id","lenght","alert","isSmall","videoId","key","opts","height","width","playerVars","autoplay","action","horror","romance","comedy","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23fdfb7e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './NavBar.css'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\" />\r\n            <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const baseUrl ='https://api.themoviedb.org/3';\r\nexport const  apiKey ='dc5a6eb741572906738d74314b61a22c';\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original'\r\n \r\n\r\n","import axios from 'axios'\r\nimport {baseUrl} from './constants/constants'\r\nconst instance =  axios.create({\r\n    baseURL:baseUrl\r\n})\r\nexport default instance","import React,{useEffect, useState} from 'react'\r\nimport './Banner.css'\r\nimport axios from '../../axios'\r\nimport { apiKey,imageUrl } from '../../constants/constants'\r\n\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState()\r\n   useEffect(() => {\r\n       axios.get(`trending/all/week?api_key=${apiKey}&language=en-US`).then((Response)=>{\r\n           \r\n           setMovie(Response.data.results[Math.floor(Math.random()*Response.data.results.length)])\r\n       })\r\n    \r\n   }, [])\r\n  \r\n    return (\r\n        <div style={{backgroundImage:`url(${movie ? imageUrl+movie.backdrop_path : \"\"})`}}\r\n         className=\"banner\">\r\n            <div className=\"content\">\r\n                <h1 className=\"title\">{movie ? movie.title :  \"\"}</h1>\r\n                <div className=\"bannerButtons\">\r\n                    <button className=\"button\">Play</button>\r\n                    <button className=\"button\">My List</button>\r\n                </div>\r\n                <h1 className=\"description\">{movie ? movie.overview:\"\"}</h1>\r\n            </div>\r\n            <div className=\"fadeBottom\"></div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{useEffect,useState} from 'react'\r\nimport  './RowPost.css'\r\nimport axios from '../../axios'\r\nimport { imageUrl,apiKey} from '../../constants/constants'\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nfunction RowPost(props) {\r\n    const [orginals, setOrginals] = useState([])\r\n    useEffect(() => {\r\n        axios.get(props.url).then((Response)=>{\r\n           \r\n            setOrginals(Response.data.results)\r\n\r\n        })\r\n    \r\n    }, [])\r\n    const  opts={\r\n        height:'390',\r\n        width:'100%',\r\n        playerVars:{\r\n            autoplay:1,\r\n\r\n        }\r\n    }\r\n    const handleMovie=(id)=>{\r\n  \r\n        \r\n        axios.get(`/movie/${id}/videos?api_key=${apiKey}&language=en-US`).then(Response=>{\r\n        \r\n\r\n            Response.data.results.lenght !==0 ? setUrlId(Response.data.results[0]) :  alert(\"Not Available\");\r\n            setDisplay(true)\r\n        })\r\n    }\r\n    const [urlId, setUrlId] = useState({})\r\n    const [display, setDisplay] = useState(false)\r\n    const closeYoutube=(()=>{\r\n        setDisplay(false)\r\n        \r\n    })\r\n   \r\n \r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"posters\">\r\n                {\r\n                    orginals.map((obj)=>\r\n\r\n                      <img onClick={(()=>handleMovie(obj.id))} className={props.isSmall ? \"smallPoster\" : \"poster\"} src={`${imageUrl+obj.backdrop_path}`} alt=\"poster\" />\r\n                    \r\n                    )\r\n                }\r\n                 </div>\r\n     \r\n            {urlId  &&     display===true ?  <YouTube videoId={urlId.key} opts={opts}/> : null  }\r\n           <div className='cButton'>\r\n           {urlId &&    display===true ?  <button className=\"closeButton\"onClick={closeYoutube}>Close</button>: null}\r\n           </div>\r\n           \r\n)\r\n         \r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default RowPost\r\n\r\n\r\n\r\n","import { apiKey } from \"../constants/constants\"\r\nexport const orginals=`discover/tv?api_key=${apiKey}&with_networks=213`\r\nexport const action=`/discover/movie?api_key=${apiKey}&with_genres=28`\r\nexport const horror=`/discover/movie?api_key=${apiKey}&with_genres=27`\r\nexport const romance=`/discover/movie?api_key=${apiKey}&with_genres=10749`\r\nexport const comedy=`/discover/movie?api_key=${apiKey}&with_genres=35`","\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Banner from './Components/Banner/Banner';\nimport RowPost from './Components/RowPost/RowPost';\nimport {orginals,action,romance,comedy,horror} from './urls/urls'\n\n\n\nfunction App() {\n  return (\n    <div>\n    <NavBar/>\n    <Banner/>\n    <RowPost title='Netflix Orginals' url={orginals}/>\n    <RowPost title='Action' url={action} isSmall/>\n    <RowPost title='Horror' url={horror} isSmall/>\n    <RowPost title='Romance' url={romance} isSmall/>\n    <RowPost title='Comedy' url={comedy} isSmall/>\n   \n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}